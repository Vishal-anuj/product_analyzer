services:
  backend:
    build:
      context: .
      dockerfile: backend/Dockerfile
    container_name: product-analyzer-backend
    ports:
      - "8000:8000"
    environment:
      - MONGODB_URI=mongodb://mongo:27017
      - MONGODB_DB=product_analyzer
      - ALLOWED_ORIGINS=http://localhost:3000,http://127.0.0.1:3000
      - PYTHONUNBUFFERED=1
      - HF_API_BASE=https://api-inference.huggingface.co/models
      - HF_MODEL=google/flan-t5-large
    env_file:
      - backend/.env
    depends_on:
      mongo:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    volumes:
      - ./backend:/app
    networks:
      - product_net
    restart: unless-stopped

  frontend:
    build:
      context: .
      dockerfile: frontend/Dockerfile
    container_name: product-analyzer-frontend
    ports:
      - "3000:3000"
    environment:
      - NEXT_PUBLIC_API_BASE=http://localhost:8000
      - NODE_ENV=development
    env_file:
      - frontend/.env.local
    depends_on:
      backend:
        condition: service_started
    volumes:
      - ./frontend:/app
      - /app/node_modules
      - /app/.next
    networks:
      - product_net
    restart: unless-stopped

  mongo:
    image: mongo:6
    container_name: product-analyzer-mongo
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db
    networks:
      - product_net
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "mongosh", "--quiet", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 40s

networks:
  product_net:

volumes:
  mongo_data:
